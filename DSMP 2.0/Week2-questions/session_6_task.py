# -*- coding: utf-8 -*-
"""session-6-task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y1tapRDjOAkqJYw6LAoe7_IXdFbe6t2F

### **`Problem-1:`** Write a Python function that takes a list and returns a new list with unique elements of the first list.

**Exercise 1:**

Input:

```bash
[1,2,3,3,3,3,4,5]
```

Output:

```bash
[1, 2, 3, 4, 5]
```
"""



"""### **`Problem-2:`** Write a Python function that accepts a hyphen-separated sequence of words as parameter and returns the words in a hyphen-separated sequence after sorting them alphabetically.

**Example 1:**

Input:
```bash
green-red-yellow-black-white
```

Output:
```bash
black-green-red-white-yellow
```
"""

# Write code here

"""### **`Problem 3:`** Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters.

```
Sample String : 'CampusX is an Online Mentorship Program fOr EnginEering studentS.'
Expected Output :
No. of Upper case characters :  9
No. of Lower case Characters :  47
```
"""

# Write code here

"""### **`Problem 4:`** Write a Python program to print the even numbers from a given list.
```
Sample List : [1, 2, 3, 4, 5, 6, 7, 8, 9]
Expected Result : [2, 4, 6, 8]
```
"""

# Write code here

"""### **`Problem 5:`** Write a Python function to check whether a number is perfect or not.

A Perfect number is a number that is half the sum of all of its positive divisors (including itself).

Example :

```
The first perfect number is 6, because 1, 2, and 3 are its proper positive divisors, and 1 + 2 + 3 = 6.
Equivalently, the number 6 is equal to half the sum of all its positive divisors: ( 1 + 2 + 3 + 6 ) / 2 = 6.

The next perfect number is 28 = 1 + 2 + 4 + 7 + 14. This is followed by the perfect numbers 496 and 8128.
```

"""

# Write code here

"""### **`Problem-6:`** Write a Python function to concatenate any no of dictionaries to create a new one.

```
Sample Dictionary :
dic1={1:10, 2:20}
dic2={3:30, 4:40}
dic3={5:50,6:60}
Expected Result : {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
```
"""

# Write code here

"""`Problem-7` Write a python function that accepts a string as input and returns the word with most occurence.

```
Input:
hello how are you i am fine thank you
```

```
Output
you -> 2
```
"""

# Write code here

"""`Problem-8` Write a python function that receives a list of integers and prints out a histogram of bin size 10

```
Input:
[13,42,15,37,22,39,41,50]
```

```
Output:
{11-20:2,21-30:1,31-40:2,41-50:3}
```
"""

# Write code here

"""`Problem-9` Write a python function that accepts a list of 2D co-ordinates and a query point, and then finds the the co-ordinate which is closest in terms of distance from the query point.

```
List of Coordinates
[(1,1),(2,2),(3,3),(4,4)]
Query Point
(0,0)
```

```
Output
Nearest to (0,0) is (1,1)
```
"""

# Write code here

"""`Problem-10`:Write a python program that receives a list of strings and performs bag of word operation on those strings

https://en.wikipedia.org/wiki/Bag-of-words_model
"""

# Write code here

"""###`Problem 11:` Write a Python program to add three given lists using Python map and lambda."""

# Write code here

"""###`Problem-12:`Write a Python program to create a list containing the power of said number in bases raised to the corresponding number in the index using Python map.
`Input:`
```
list1 = [1,2,3,4,5,6]
```
`Output:`
```
[1,2,9,64,625,-]
```

"""

# Write code here

"""###`Problem-13` Using filter() and list() functions and .lower() method filter all the vowels in a given string.


"""

# Write code here

"""`Problem-14`: Use reduce to convert a 2D list to 1D"""

# Write code here

"""`Problem 15`- A dictionary contains following information about 5 employees:
- First name
- Last name
- Age
- Grade(Skilled,Semi-skilled,Highly skilled)<br>
Write a program using map/filter/reduce to a list of employees(first name + last name) who are highly skilled
"""

# Write code here
employees = [
    {
        'fname':'Nitish',
        'lname':'Singh',
        'age' : 33,
        'grade':'skilled'
    },
    {
        'fname':'Ankit',
        'lname':'Verma',
        'age' : 34,
        'grade':'semi-skilled'
    },
    {
        'fname':'Neha',
        'lname':'Singh',
        'age' : 35,
        'grade':'highly-skilled'
    },
    {
        'fname':'Anurag',
        'lname':'Kumar',
        'age' : 30,
        'grade':'skilled'
    },
    {
        'fname':'Abhinav',
        'lname':'Sharma',
        'age' : 37,
        'grade':'highly-skilled'
    }

]

list(map(lambda x:x['fname'] + ' ' + x['lname'],list(filter(lambda x:True if x['grade'] == 'highly-skilled' else False,employees))))

